# Generated by Django 5.1.3 on 2024-11-14 00:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='State',
            fields=[
                ('abbr', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.state')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporate_name', models.CharField(max_length=200, verbose_name='Razão Social')),
                (
                    'cpf_cnpj',
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[django.core.validators.RegexValidator('^(\\w{14}|\\d{11})$')],
                        verbose_name='CPF ou CNPJ',
                    ),
                ),
                (
                    'material_type',
                    models.CharField(
                        choices=[('CAR', 'Carvão Vegetal'), ('MIN', 'Minério')],
                        max_length=3,
                        verbose_name='Tipo de Material',
                    ),
                ),
                ('distance_in_meters', models.IntegerField(blank=True, null=True, verbose_name='Distância em Metros')),
                (
                    'rating',
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name='Avaliação',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'city',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name='suppliers', to='map.city'
                    ),
                ),
                (
                    'state',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name='suppliers', to='map.state'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['corporate_name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(max_length=50, verbose_name='Documento')),
                ('type', models.CharField(max_length=50, verbose_name='Tipo de Documento')),
                ('filepath', models.CharField(blank=True, max_length=255, null=True, verbose_name='Link do Arquivo')),
                ('validity', models.DateField(blank=True, null=True, verbose_name='Validade')),
                ('status', models.CharField(max_length=50, verbose_name='Status')),
                (
                    'supplier',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to='map.supplier', verbose_name='Fornecedor'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
            },
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['material_type'], name='map_supplie_materia_ca330c_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['state'], name='map_supplie_state_i_7fc1e7_idx'),
        ),
    ]
